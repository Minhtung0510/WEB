@{ Layout="~/Views/Shared/_Layout.cshtml"; ViewData["Title"]="Báo cáo doanh thu"; }

<div class="container py-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h3><i class="fas fa-chart-bar me-2"></i>Báo cáo doanh thu</h3>
    <a href="/Admin" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left me-2"></i>Về Dashboard
    </a>
  </div>

  <!-- Filter -->
  <div class="card mb-4">
    <div class="card-body">
      <form method="get" class="row g-3 align-items-end">
        <div class="col-md-3">
          <label class="form-label">Năm</label>
          <select name="year" class="form-select">
            @for(int y = DateTime.Now.Year; y >= DateTime.Now.Year - 5; y--)
            {
              <option value="@y" @(ViewBag.Year == y ? "selected" : "")>@y</option>
            }
          </select>
        </div>
        <div class="col-md-3">
          <label class="form-label">Tháng</label>
          <select name="month" class="form-select">
            @for(int m = 1; m <= 12; m++)
            {
              <option value="@m" @(ViewBag.Month == m ? "selected" : "")>Tháng @m</option>
            }
          </select>
        </div>
        <div class="col-md-3">
          <button type="submit" class="btn btn-primary w-100">
            <i class="fas fa-search me-2"></i>Xem báo cáo
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Monthly Revenue Chart -->
  <div class="row g-4 mb-4">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header bg-white">
          <h5 class="mb-0">Doanh thu theo tháng - Năm @ViewBag.Year</h5>
        </div>
        <div class="card-body">
          <canvas id="monthlyChart" height="80"></canvas>
        </div>
      </div>
    </div>
  </div>

  <!-- Daily Revenue Chart -->
  <div class="row g-4 mb-4">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header bg-white">
          <h5 class="mb-0">Doanh thu theo ngày - Tháng @ViewBag.Month/@ViewBag.Year</h5>
        </div>
        <div class="card-body">
          <canvas id="dailyChart" height="80"></canvas>
        </div>
      </div>
    </div>
  </div>

  <!-- Top Customers -->
  <div class="row g-4">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header bg-white">
          <h5 class="mb-0">Top 10 khách hàng</h5>
        </div>
        <div class="card-body">
          <table class="table">
            <thead>
              <tr>
                <th>Khách hàng</th>
                <th>Email</th>
                <th class="text-center">Số đơn</th>
                <th class="text-end">Tổng chi tiêu</th>
              </tr>
            </thead>
            <tbody>
              @foreach(var item in (List<dynamic>)ViewBag.TopCustomers)
              {
                <tr>
                  <td>@item.Customer.FullName</td>
                  <td>@item.Customer.Email</td>
                  <td class="text-center"><span class="badge bg-primary">@item.OrderCount</span></td>
                  <td class="text-end"><strong class="text-success">@((decimal)item.TotalSpent).ToString("N0")₫</strong></td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.umd.min.js"></script>
<script>
// Monthly Revenue Chart
const monthlyData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.MonthlyRevenue));
const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
new Chart(monthlyCtx, {
  type: 'bar',
  data: {
    labels: monthlyData.map(d => `Tháng ${d.month}`),
    datasets: [{
      label: 'Doanh thu (VNĐ)',
      data: monthlyData.map(d => d.revenue),
      backgroundColor: 'rgba(13, 110, 253, 0.5)',
      borderColor: 'rgba(13, 110, 253, 1)',
      borderWidth: 1
    }]
  },
  options: {
    responsive: true,
    plugins: {
      legend: { display: false }
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          callback: function(value) {
            return (value / 1000000).toFixed(0) + 'M';
          }
        }
      }
    }
  }
});

// Daily Revenue Chart
const dailyData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.DailyRevenue));
const dailyCtx = document.getElementById('dailyChart').getContext('2d');
new Chart(dailyCtx, {
  type: 'line',
  data: {
    labels: dailyData.map(d => new Date(d.date).getDate()),
    datasets: [{
      label: 'Doanh thu (VNĐ)',
      data: dailyData.map(d => d.revenue),
      backgroundColor: 'rgba(25, 135, 84, 0.2)',
      borderColor: 'rgba(25, 135, 84, 1)',
      borderWidth: 2,
      tension: 0.4,
      fill: true
    }]
  },
  options: {
    responsive: true,
    plugins: {
      legend: { display: false }
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          callback: function(value) {
            return (value / 1000000).toFixed(1) + 'M';
          }
        }
      }
    }
  }
});
</script>